// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  name             String   @unique
  password         String
  avatar           Image?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  learner_courses  Course[] @relation("LearnerCourses")
  authored_courses Course[] @relation("AuthoredCourses")

  @@map("users")
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  learner_id  Int
  learner     User     @relation("LearnerCourses", fields: [learner_id], references: [id])
  author_id   Int
  author      User     @relation("AuthoredCourses", fields: [author_id], references: [id])
  thumbnails  Image[]
  lessons_id  Lesson[]
  reviews_id  Review[]

  @@map("courses")
}

model Lesson {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  video       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  course_id   Int
  courses     Course   @relation(fields: [course_id], references: [id])

  @@map("lessons")
}

model Review {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  rating    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course_id Int
  courses   Course   @relation(fields: [course_id], references: [id])

  @@map("reviews")
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course_id Int
  course    Course   @relation(fields: [course_id], references: [id])
  user_id   Int      @unique
  user      User     @relation(fields: [user_id], references: [id])

  @@map("images")
}
